name: Check Build

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'
  pull_request:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'

env:
  PRIMARY_MAVEN_MODULE: ${{ github.event.repository.name }}
  DEMO_MAVEN_MODULE: ${{ github.event.repository.name }}-demo

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [11, 17, 21]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'
      
    - name: Build with Maven
      # Java 17 is required for tests
      run: ./mvnw -B clean package ${{ matrix.java >=17 && '-P run-integration-tests' || '-Dmaven.test.skip=true' }}
      
    - name: Check for uncommited changes
      run: |
        if [[ "$(git status --porcelain)" != "" ]]; then
          echo ----------------------------------------
          echo git status
          echo ----------------------------------------
          git status
          echo ----------------------------------------
          echo git diff
          echo ----------------------------------------
          git diff
          echo ----------------------------------------
          echo Troubleshooting
          echo ----------------------------------------
          echo "::error::Unstaged changes detected. Locally try running: git clean -ffdx && ./mvnw -B clean package"
          exit 1
        fi

    - name: Upload demo files
      uses: actions/upload-artifact@v4
      with:
        name: demo-files-java-${{ matrix.java }}
        path: ${{ env.DEMO_MAVEN_MODULE }}/target/${{ env.DEMO_MAVEN_MODULE }}.jar
        if-no-files-found: error

    - name: Upload screenshots of test failures
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-fail-screenshots-${{ matrix.java }}
        path: ${{ env.PRIMARY_MAVEN_MODULE }}/target/screenshots
        if-no-files-found: ignore

  checkstyle:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || !startsWith(github.head_ref, 'renovate/') }}

    strategy:
      matrix:
        java: [17]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Run Checkstyle
      run: ./mvnw -B checkstyle:check -P checkstyle -T2C

  pmd:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || !startsWith(github.head_ref, 'renovate/') }}

    strategy:
      matrix:
        java: [17]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Run PMD
      run: ./mvnw -B test pmd:aggregate-pmd-no-fork pmd:check -P pmd -DskipTests -T2C

    - name: Run CPD (Copy Paste Detector)
      run: ./mvnw -B pmd:aggregate-cpd pmd:cpd-check -P pmd -DskipTests -T2C
    
    - name: Upload report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pmd-report
        if-no-files-found: ignore
        path: |
          target/site/*.html
          target/site/css/**
          target/site/images/logos/maven-feather.png
          target/site/images/external.png
